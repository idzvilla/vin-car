"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è Telegram –±–æ—Ç–∞."""

from __future__ import annotations

from typing import Optional

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from loguru import logger


class TicketKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞—è–≤–∫–∞–º–∏."""
    
    @staticmethod
    def get_take_keyboard(ticket_id: int) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏.
        
        Args:
            ticket_id: ID –∑–∞—è–≤–∫–∏
            
        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "Take"
        """
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üìã –í–∑—è—Ç—å –∑–∞—è–≤–∫—É",
                        callback_data=f"take_ticket:{ticket_id}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚ùì –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å?",
                        callback_data=f"done_hint:{ticket_id}"
                    )
                ]
            ]
        )
        
        logger.debug("–°–æ–∑–¥–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏", ticket_id=ticket_id)
        return keyboard
    
    @staticmethod
    def get_taken_keyboard(ticket_id: int) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏.
        
        Args:
            ticket_id: ID –∑–∞—è–≤–∫–∏
            
        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
        """
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚ùì –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å?",
                        callback_data=f"done_hint:{ticket_id}"
                    )
                ]
            ]
        )
        
        logger.debug("–°–æ–∑–¥–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏", ticket_id=ticket_id)
        return keyboard
    
    @staticmethod
    def get_done_hint_keyboard(ticket_id: int) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏.
        
        Args:
            ticket_id: ID –∑–∞—è–≤–∫–∏
            
        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
        """
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å PDF –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ",
                        callback_data=f"send_pdf_hint:{ticket_id}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üí¨ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /done",
                        callback_data=f"command_hint:{ticket_id}"
                    )
                ]
            ]
        )
        
        logger.debug("–°–æ–∑–¥–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π", ticket_id=ticket_id)
        return keyboard
    
    @staticmethod
    def get_empty_keyboard() -> InlineKeyboardMarkup:
        """–ü—É—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫.
        
        Returns:
            –ü—É—Å—Ç–∞—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        """
        return InlineKeyboardMarkup(inline_keyboard=[])


class MainKeyboards:
    """–û—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±–æ—Ç–∞."""
    
    @staticmethod
    def get_start_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start.
        
        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
        """
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç?",
                        callback_data="help_info"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                        callback_data="support_info"
                    )
                ]
            ]
        )
        
        logger.debug("–°–æ–∑–¥–∞–Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞")
        return keyboard
    
    @staticmethod
    def get_help_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–º–æ—â–∏.
        
        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ–º–æ—â—å—é
        """
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üîô –ù–∞–∑–∞–¥",
                        callback_data="back_to_start"
                    )
                ]
            ]
        )
        
        logger.debug("–°–æ–∑–¥–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–º–æ—â–∏")
        return keyboard


class ManagerKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤."""
    
    @staticmethod
    def get_manager_actions_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
        
        Returns:
            Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
        """
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                        callback_data="manager_stats"
                    ),
                    InlineKeyboardButton(
                        text="üìã –í—Å–µ –∑–∞—è–≤–∫–∏",
                        callback_data="manager_tickets"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                        callback_data="manager_settings"
                    )
                ]
            ]
        )
        
        logger.debug("–°–æ–∑–¥–∞–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞")
        return keyboard





