#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è VIN –±–æ—Ç–æ–º

BOT_PID_FILE="/tmp/vin_bot.pid"
LOG_FILE="bot.log"

case "$1" in
    start)
        echo "üöÄ –ó–∞–ø—É—Å–∫ VIN –±–æ—Ç–∞..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –±–æ—Ç
        if [ -f "$BOT_PID_FILE" ]; then
            PID=$(cat "$BOT_PID_FILE")
            if ps -p "$PID" > /dev/null 2>&1; then
                echo "‚ùå –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $PID)"
                exit 1
            else
                echo "üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π PID —Ñ–∞–π–ª"
                rm -f "$BOT_PID_FILE"
            fi
        fi
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞
        pkill -f "python.*main.py" 2>/dev/null || true
        sleep 2
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        nohup python3 main.py > "$LOG_FILE" 2>&1 &
        echo $! > "$BOT_PID_FILE"
        
        echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (PID: $(cat $BOT_PID_FILE))"
        echo "üìù –õ–æ–≥–∏: $LOG_FILE"
        ;;
        
    stop)
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ VIN –±–æ—Ç–∞..."
        
        if [ -f "$BOT_PID_FILE" ]; then
            PID=$(cat "$BOT_PID_FILE")
            if ps -p "$PID" > /dev/null 2>&1; then
                kill "$PID"
                echo "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID: $PID)"
            else
                echo "‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
            fi
            rm -f "$BOT_PID_FILE"
        fi
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        pkill -f "python.*main.py" 2>/dev/null || true
        ;;
        
    restart)
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ VIN –±–æ—Ç–∞..."
        $0 stop
        sleep 2
        $0 start
        ;;
        
    status)
        if [ -f "$BOT_PID_FILE" ]; then
            PID=$(cat "$BOT_PID_FILE")
            if ps -p "$PID" > /dev/null 2>&1; then
                echo "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (PID: $PID)"
                echo "‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: $(ps -o lstart= -p $PID)"
            else
                echo "‚ùå –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (PID —Ñ–∞–π–ª –µ—Å—Ç—å, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω)"
            fi
        else
            echo "‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
        ;;
        
    logs)
        echo "üìù –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –±–æ—Ç–∞..."
        if [ -f "$LOG_FILE" ]; then
            tail -f "$LOG_FILE"
        else
            echo "‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        ;;
        
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo "  status  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
        echo "  logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
        exit 1
        ;;
esac

